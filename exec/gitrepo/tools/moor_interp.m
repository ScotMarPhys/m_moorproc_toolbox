clearmoor     = 'v406_4';inpath   = ['/data-so5/move_kanzow/me60_kanzow/',moor,'/mc/'];outpath  = ['/data-so5/move_kanzow/me60_kanzow/mat_data/'];infofile = ['/data-so5/move_kanzow/me60_kanzow/infodat/',moor,'info.dat'];co  = 1/8;       %cutoff  Frequenz minitsr_mt  = 24;        % sampling Frequenz  minit        sr_mc  = 24*6;        % sampling Frequenz  microcat  N   = 5;          % FilterordnungWn_mt = 2 *co/sr_mt;Wn_mc = 2 *co/sr_mc;  [b_mt,a_mt] = butter(N,Wn_mt);[b_mc,a_mc] = butter(N,Wn_mc);% --- interpolation parameterst = .5;   % day gridst = [2003 06 20];en = [2004 02 16];jd_grid = [julian(st(1),st(2),st(3),0):t:julian(en(1),en(2),en(3),0)];% ---- load topmost pressure time seriesif strcmp(moor,'V404_1')     pfile = '/home/solo1/kanzow/so153/V404_1/mt/V404_1_027.mt';elseif strcmp(moor,'V405_1') pfile = '/home/solo1/kanzow/so153/V405_1/mt/V405_1_019.mt';elseif strcmp(moor,'V406_1') pfile = '/home/solo1/kanzow/so153/V406_1/mt/V406_1_020.mt';else pfile = ['/data-so5/move_kanzow/me60_kanzow/',moor,'/mt/',moor,'_001.raw'];end[yy,mm,dd,hh,p] = rodbload(pfile,'YY:MM:DD:HH:P'); jdp  = julian(yy,mm,dd,hh)';p    = filtfilt(b_mt,a_mt,p); % p_grid = interp1(jdp,p,jd_grid);% -----  load infodat [nin_depth,id,wd] = rodbload(infofile,'z:instrument:WaterDepth');ii = find(id >= 333 & id <= 337);nin_depth = z2p(nin_depth(ii),16); % instr pressure nominel % ------- TT = []; CC = [];for series = 1 : length(ii), series infile = [inpath,moor,'_',sprintf('%3.3d',series),'.raw'];  [yy,mm,dd,hh,T,C] = rodbload(infile,'YY:MM:DD:HH:T:C'); Ti = find(T > -9000); Ci = find(C > -9000);       jd              = julian(yy,mm,dd,hh)';ii = find(diff(jd(Ti)) >0);Ti = Ti(ii);ii = find(diff(jd(Ci)) >0);Ci = Ci(ii); T  = filtfilt(b_mc,a_mc,T(Ti)); C  = filtfilt(b_mc,a_mc,C(Ci)); TT = [TT interp1(jd(Ti),T,jd_grid)']; CC = [CC interp1(jd(Ci),C,jd_grid)'];  end  %CC = CC';TT = TT';% ------- pressure time series %keyboardns = length(nin_depth)range  = max(z2p(wd,16)-p_grid);               % depth range from top to bottomoffset = range - (nin_depth(ns)-nin_depth(1)) % depth offset to                                               % correct nin_depth   %nin_depth(1:ns-1) = nin_depth(1:ns-1)-offset; % include offset at bottom%nin_depth(1) = nin_depth(1)-offset; % include offset at top%nin_depth(1:3) = nin_depth(1:3)-offset; % include offset in the middleci =  (z2p(wd,16)-p_grid)/range;                % time series of Cosine of angle of                                                % inclination of mooringcin_depth = nin_depth(ns)-(nin_depth(ns)-nin_depth)*ci;  % time series of corrected                                              % instrument depths rel. to                                              % nominal depth of bottom sensor % eval([' save /home/solo1/kanzow/so153/work/',moor,'_TC.mat TT CC p_grid jd_grid cin_depth ']) eval([' save ',outpath,moor,'_TC.mat TT CC p_grid jd_grid cin_depth '])