%function []=woce2rodb(woce_id,cruise_id)% function []=woce2rodb(woce_id,cruise_id)%% extract RODB bottle file from WOCE bottle files (*.sea and *.sum)% this procedure is NOT reversible !%% input  :	woce_id		- filename without extension%		cruise_id	- RODB cruise-identifier%% version 0.1.0		last change 18.07.1997woce_id='cal27';cruise_id='m273';% G.Krahmann, IfM Kiel, Jun 1997% open input and output filesfin1=fopen([woce_id,'.sum'],'rt');fin2=fopen([woce_id,'.sea'],'rt');fout=fopen([cruise_id,'_001.btl'],'wt');% set of output-variables (WOCE-identifiers)% ' THETA' is not usedoutvar=['BTLNBR   BTL %5i  ';...        'CTDPRS   P   %7.1f';...        'CTDPRES  P   %7.1f';...        'CTDTMP   T   %7.4f';...        'CTDSAL   S   %7.4f';...        'CTDOXY   O   %7.1f';...        'SALNTY   S0  %7.4f';...        'SALINITY S0  %7.4f';...        'OXYGEN   BO  %7.1f';...        'SILCAT   SI  %7.2f';...        'NITRAT   NO3 %7.2f';...        'NITRIT   NO2 %7.2f';...        'PHSPHT   PO4 %7.2f';...        'CFC-11   F11 %7.3f';...        'CFC-12   F12 %7.3f';...        'REVPRS   P0  %7.1f';...        'REVTMP   T0  %7.3f';...        'TCARBN   TCO2%7.1f';...        'ALKALI   TALK%7.1f';...	''];if 1% read until a line contains ROS or CTDok=0;while ok==0  li=fgetl(fin1);  if ~isempty(findstr(li,'ROS')) | ~isempty(findstr(li,'CTD'))    ok=1;  endend% check for different formats of input station files%           0         1         2         3         4         5         6         7         8%           1         1         1         1         1         1         1         1         1        % format 1: 316N145/9              574      1  ROS 061195 1815    BE 19 59.96 S  54 29.98 E GPS  4558% format 2: 06MTM14  AR15   627   1  CTD 901004 10:43 10 51.20'N  36 28.30'W 4992      2505% format 3: 06MTM32/1  ISS2  118    1 ROS  950326  0016 BE  12 48.03 N   43 09.86 E  GPS    44% format 4: 06MT32/4  ISS2     278      1  ROS 060995 0510    BE 03 13.63 S 052 33.23 E  GPS   4585% format 5: 06BE89     IR1      1   1  ROS 930805 0128 BO  07 29.75 N  78 14.82 E GPS 1946      1934% format 5: 06MTM27/3  AR15     48  1  ROS 940224 1257 BO  18 51.80 N  37 22.10 W GPS 5622      5000%if strcmp(li(36:38),'ROS') | strcmp(li(36:38),'CTD')  form=1;  idx=[36,38;23,26;28,33;55,56;44,45;40,41;42,43;47,48;49,50;58,59;61,65;67,67;69,71;73,77;79,79;86,89];%      ROS   STN   CAST  BE/BO YEAR  MON   DAY   HOUR  MIN   LAD   LAM   N/S   LOD   LOM   E/W   DEPelseif strcmp(li(26:28),'ROS') | strcmp(li(26:28),'CTD')  form=2;  idx=[26,28;16,19;21,23; 1, 1;30,31;32,33;34,35;37,38;40,41;43,44;46,50;52,52;54,56;58,62;64,64;66,69];%      ROS   STN   CAST  BE/BO YEAR  MON   DAY   HOUR  MIN   LAD   LAM   N/S   LOD   LOM   E/W   DEPelseif strcmp(li(27:29),'ROS') | strcmp(li(27:29),'CTD')  form=3;  idx=[27,29;17,20;23,25;45,46;32,33;34,35;36,37;40,41;42,43;49,50;52,56;58,58;61,63;65,69;71,71;79,82];%      ROS   STN   CAST  BE/BO YEAR  MON   DAY   HOUR  MIN   LAD   LAM   N/S   LOD   LOM   E/W   DEPelseif strcmp(li(32:34),'ROS') | strcmp(li(32:34),'CTD')  form=4;  idx=[32,34;19,22;24,29;51,52;40,41;36,37;38,39;43,44;45,46;54,55;57,61;63,63;65,67;69,73;75,75;84,87];%      ROS   STN   CAST  BE/BO YEAR  MON   DAY   HOUR  MIN   LAD   LAM   N/S   LOD   LOM   E/W   DEPelseif strcmp(li(28:30),'ROS')  form=5;  idx=[28,30;18,22;24,26;44,45;32,33;34,35;36,37;39,40;41,42;48,49;51,55;57,57;59,61;63,67;69,69;75,78];%      ROS   STN   CAST  BE/BO YEAR  MON   DAY   HOUR  MIN   LAD   LAM   N/S   LOD   LOM   E/W   DEPend% first read all profile locations and times/dates from *.sumcount=0;info=nan;while ~feof(fin1)%  li=fgetl(fin1);  if ~isstr(li)    break  end  if length(li)<36    disp(li)  end  typ=li(idx(1,1):idx(1,2));  if strcmp(typ,'ROS') | strcmp(typ,'CTD')    stnnbr=str2num(li(idx(2,1):idx(2,2)))+str2num(li(idx(3,1):idx(3,2)))/1000;	% stnnbr+cstno/1000    good=find(stnnbr==info(:,1));    if isempty(good)      count=count+1;    end    info(count,1)=stnnbr;    if strcmp(li(idx(4,1):idx(4,2)),'BE')		% begin/bottom/end      idx_off=0;    elseif strcmp(li(idx(4,1):idx(4,2)),'BO')      idx_off=8;    elseif strcmp(li(idx(4,1):idx(4,2)),'EN')      idx_off=16;    else       idx_off=0;    end    info(count,2+idx_off)=str2num(li(idx(5,1):idx(5,2)))+1900;	% year    info(count,3+idx_off)=str2num(li(idx(6,1):idx(6,2)));	% month    info(count,4+idx_off)=str2num(li(idx(7,1):idx(7,2)));	% day    dummy=str2num(li(idx(8,1):idx(8,2)));			% hour    if ~isempty(dummy)      info(count,5+idx_off)=str2num(li(idx(8,1):idx(8,2)));    else      info(count,5+idx_off)=-9;    end    dummy=str2num(li(idx(9,1):idx(9,2)));			% minute    if ~isempty(dummy)      info(count,6+idx_off)=dummy;    else      info(count,6+idx_off)=-9;    end    dummy=str2num(li(idx(10,1):idx(10,2)))+...		str2num(li(idx(11,1):idx(11,2)))/60;    if ~isempty(dummy)      info(count,7+idx_off)=dummy;    else      info(count,7+idx_off)=-9;    end    if strcmp(li(idx(12,1)),'S')      info(count,7+idx_off)=-info(count,7+idx_off);    end    dummy=str2num(li(idx(13,1):idx(13,2)))+str2num(li(idx(14,1):idx(14,2)))/60;    if ~isempty(dummy)      info(count,8+idx_off)=dummy;    else      info(count,8+idx_off)=-9;    end    if strcmp(li(idx(15,1)),'W')      info(count,8+idx_off)=-info(count,8+idx_off);    end    if length(li)>=idx(16,2)      dummy=str2num(li(idx(16,1):idx(16,2)));    else      dummy=[];    end     if ~isempty(dummy)      info(count,9+idx_off)=dummy;    else      info(count,9+idx_off)=-9;    end  end  li=fgetl(fin1);endend% close station info filefclose(fin1);% loop over header of bottle fileok=1;while ok  li=fgetl(fin2);  if ~isempty(findstr(li,'STNNBR'))    ok=0;  endendinidx=zeros(size(outvar,1),1);for n=1:size(outvar,1)  dummy=findstr(deblank(outvar(n,1:8)),li);  if ~isempty(dummy)    inidx(n)=dummy;  endendgood=find(inidx>0);inidx=inidx(good);[dummy,idx]=sort(inidx);inidx=inidx(idx);li2=[' ',li];idx=setstr(32+(abs(li2)>32));idx=findstr(idx,' !');for n=1:length(inidx)  inidx(n)=find(inidx(n)==idx);endli=fgetl(fin2);li=fgetl(fin2);% prepare data arraydata=nan*zeros(size(info,1)*36,length(good));datastn=nan*zeros(size(info,1)*36,1);% loop through bottle filecount=1;while ~feof(fin2)  li=fgetl(fin2);  if ~isstr(li)    break  end  dummy=sscanf(li,'%f')';  data(count,:)=dummy(inidx);  datastn(count)=dummy(1);  count=count+1;endfclose(fin2);data=data(1:count-1,:);datastn=datastn(1:count-1,:);% write RODB fileost=deblank(outvar(good(1),10:13));wst=deblank(outvar(good(1),14:18));for m=2:length(good)  ost=[ost,':',deblank(outvar(good(m),10:13))];  wst=[wst,' ',deblank(outvar(good(m),14:18))];endfor n=1:size(info,1)  disp(['writing station ',int2str(n)])  fprintf(fout,['Cruise          = ',cruise_id,'\n'],0);  fprintf(fout,['Station         = ',int2str(info(n,1)),'\n'],0);  fprintf(fout,['Profile         = ',int2str(n),'\n'],0);  fprintf(fout,['Start_Lat       = %9.5f \n'],info(n,7));  fprintf(fout,['Start_Long      = %10.5f \n'],info(n,8));  st=[int2str(info(n,2)),'/',int2strv(info(n,3),1,'0',2),'/',...	int2strv(info(n,4),1,'0',2)];  fprintf(fout,['Start_Date      = %s \n'],st);  fprintf(fout,['Start_Time      = ',int2strv(info(n,5),1,'0',2),':',...	int2strv(info(n,6),1,'0',2),'\n'],0);  if strcmp(typ,'ROS')    fprintf(fout,['End_Lat         = %9.5f \n'],info(n,23));    fprintf(fout,['End_Long        = %10.5f \n'],info(n,24));    st=[int2str(info(n,18)),'/',int2strv(info(n,19),1,'0',2),'/',...	int2strv(info(n,20),1,'0',2)];    fprintf(fout,['End_Date        = %s \n'],st);    fprintf(fout,['End_Time        = ',int2strv(info(n,21),1,'0',2),':',...	int2strv(info(n,22),1,'0',2),'\n'],0);  end  fprintf(fout,['WaterDepth      = %4i \n'],info(n,9));  fprintf(fout,['Columns         = %s \n'],ost);  lines=find(datastn==floor(info(n,1)));  if isempty(lines)    fprintf(fout,[wst,'\n'],data(1,:)*0-9);  else    for m=1:length(lines)      fprintf(fout,[wst,'\n'],data(lines(m),:));    end  endendfclose(fout);