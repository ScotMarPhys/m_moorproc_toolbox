% processing of pies bottom pressure data / % -- despike% -- apply drift fitclearloc = 'v406_3';  % Verankerungsposition % -- parameters for despikingpytol        = [-.5 .5];pstddy_tol   = 6; tytol        = [-5 5];tstddy_tol   = 6; nloop       = 3;dum         = -9999;sr          = 48;  % samling/interpolation rate [per day]co          = 1/2; % cutoff    [per day]       co2         = 1/30; ssr         = 2;   % sub sampling rate  programme   = 'polbpr_processing.m';    if strcmp(loc,'v406_4')  load /data0-led/move/me60/mooring/v406_4/pol_bpr/BPR-Data-Move2004.4p  id   ='DQ46267';  time_corr = 0;  %first guess only  data      =  BPR_Data_Move2004;  len       = length(data);   pcol      = 7;  % temp column  tcol      = 6;  % pres columnelseif strcmp(loc,'v406_3')   load /data0-led/move/so172/mooring/v406_3/pol_bpr/pol_bpr_15min.df  id   ='DQ46267';  time_corr = 0;  %first guess only  data      = pol_bpr_15min;  len       = length(data);   pcol      = 9; % temp column  tcol      = 8; % pres columnend  jd          = julian(data(:,3),ones(len,1),data(:,4),data(:,5));time_basep  = 20:length(jd)-20;jd          = jd(time_basep)- time_corr;P           = data(time_basep,pcol)/100;  % P [mbar] --> [dbar]T           = data(time_basep,tcol)/100;[pd,dx,ndx] = ddspike(P,pytol,pstddy_tol,[nloop],'y',dum);pause(3)[td,dx,ndx] = ddspike(T,tytol,tstddy_tol,[nloop],'y',dum);valI        = find(pd ~= dum);jd_grid     = jd(valI(1)):1/sr:jd(valI(length(valI)));pr_int      = interp1(jd(valI),pd(valI),jd_grid); % pressurepr_filt     = auto_filt(pr_int,sr,co);pr_filt2    = auto_filt(pr_int,sr,co2,'low',4); valI        = find(td ~= dum);%ii          = find(diff(jd(valI))>0);t_int       = interp1(jd(valI),td(valI),jd_grid);  % temperature[exfit_coef,pr_exfit]  = exp_lin_fit2(jd_grid,pr_int,[1 1 1 1]);linfit_coef            = polyfit(jd_grid,pr_int,1);pr_linfit              = polyval(linfit_coef,jd_grid); eval(['save ',loc,'_polbpr.mat pr_int pr_filt  pr_filt2 pr_exfit pr_linfit exfit_coef linfit_coef t_int jd_grid programme']) % ---- spectral estimate of pressure [spec,coh95,fs] = spectrum_tm(pr_int-pr_exfit,5,length(pr_int)*2,5,10,sr);% ---- graphics ----------------------------  figure(1) hold off plot(jd_grid-jd(1),pr_filt,'b') hold on %% plot(jd_grid-jd(1),pf2,'r') plot(jd_grid-jd(1),pr_exfit,'g--') plot(jd_grid-jd(1),pr_linfit,'m--')grid onylim([min(pr_filt) max(pr_filt)])xlabel('time [days]')ylabel('pressure [dbar]')title(['mooring ',loc,'   sensor id ',sprintf('%3.3d',id)])legend('pressure (2 day low-pass)','exp.-lin. fit','lin. fit',2)eval(['print -dpsc pies_processing',loc,'P.psc']) figure(2) hold off plot(jd_grid-jd(1),t_int,'b')xlabel('time [days]')ylabel('temperature [ \circ C]')title(['mooring ',loc,'   sensor id ',sprintf('%3.3d',id)])grid oneval(['print -dpsc pies_processing',loc,'T.psc'])figure(3)loglog(1./fs,spec)title(['mooring ',loc,'   sensor id ',sprintf('%3.3d',id)])ylabel(['spectral density'])xlabel('period')